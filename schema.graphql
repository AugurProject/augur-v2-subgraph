enum MarketStatus {
  TRADING
  REPORTING
  DISPUTING
  FINALIZED
  SETTLED
}

type User @entity {
  id: ID!

  marketsCreated: [Market!]! @derivedFrom(field: "creator")

  marketsAsReporter: [Market!]! @derivedFrom(field: "designatedReporter")
}

type Universe @entity {
  id: ID!

  parentUniverse: Universe

  payoutNumerators: [BigInt!]

  creationTimestamp: BigInt

  markets: [Market!]! @derivedFrom(field: "universe")

  children: [Universe!]! @derivedFrom(field: "parentUniverse")
}

type Market @entity {
  id: ID!

  universe: Universe!

  creator: User!

  owner: User!

  extraInfo: String!

  numTicks: BigInt!

  designatedReporter: User!

  endTimestamp: BigInt!

  prices: [BigInt!]!

  marketType: Int!

  outcomes: [Bytes!]!

  timestamp: BigInt!

  noShowBond: BigInt!

  status: MarketStatus!

  events: [MarketEvent!]! @derivedFrom(field: "market")
}

interface MarketEvent {
  id: ID!

  market: Market!

  timestamp: BigInt!

  block: BigInt!

  tx_hash: String!
}

type TransferMarketEvent implements MarketEvent @entity {
  id: ID!

  market: Market!

  timestamp: BigInt!

  block: BigInt!

  tx_hash: String!

  universe: Universe!

  from: User!

  to: User!
}

type MigrateMarketEvent implements MarketEvent @entity {
  id: ID!

  market: Market!

  timestamp: BigInt!

  block: BigInt!

  tx_hash: String!

  originalUniverse: Universe!

  newUniverse: Universe!
}

type CreateMarketEvent implements MarketEvent @entity {
  id: ID!

  market: Market!

  timestamp: BigInt!

  block: BigInt!

  tx_hash: String!

  universe: Universe!

  endTime: BigInt!

  extraInfo: String!

  marketCreator: User!

  designatedReporter: User!

  feePerCashInAttoCash: BigInt!

  prices: [BigInt!]!

  marketType: Int!

  numTicks: BigInt!

  outcomes: [Bytes!]!

  noShowBond: BigInt!

  creationTimestamp: BigInt!
}

type FinalizeMarketEvent implements MarketEvent @entity {
  id: ID!

  market: Market!

  timestamp: BigInt!

  block: BigInt!

  tx_hash: String!

  finalizeTimestamp: BigInt!

  winningPayoutNumerators: [BigInt!]!
}
